{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/linux-command-line-decompression-archives-in-different-formats.html","result":{"data":{"post":{"__typename":"MdxPost","slug":"/linux-command-line-decompression-archives-in-different-formats.html","title":"linux命令行解压不同格式的压缩包","date":"2020/03/15","tags":[{"name":"linux","slug":"linux"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"linux命令行解压不同格式的压缩包\",\n  \"date\": \"2020-03-15 21:32\",\n  \"slug\": \"/linux-command-line-decompression-archives-in-different-formats.html\",\n  \"tags\": [\"linux\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u4E0D\\u540C\\u7684\\u6587\\u4EF6\\u9700\\u8981\\u4E0D\\u540C\\u7684\\u89E3\\u538B\\u547D\\u4EE4\\uFF0C\\u5C31\\u4E00\\u8D77\\u6765\\u770B\\u770B\\u4E0D\\u540C\\u683C\\u5F0F\\u7684\\u89E3\\u538B\\u547D\\u4EE4\\u5427\\u3002\"), mdx(\"h2\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \".zip\"), \" \\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ unzip filename.zip\\n\")), mdx(\"h2\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \" .gz\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ gunzip filename.gz\\n\")), mdx(\"p\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \" .tar\"), \" \\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ tar -xvf filename.tar\\n\")), mdx(\"h2\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \" .tar.gz\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ tar -xzf filename.tar.gz\\n\")), mdx(\"h2\", null, \"\\u89E3\\u538B \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \".tar.xz\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ tar -xJf filename.tar.xz\\n\")), mdx(\"h2\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \" .tar.bz2\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ tar -xjf filename.tar.bz2\\n\")), mdx(\"p\", null, \"\\u6700\\u65B0\\u7248\\u672C\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tar\"), \"\\u5DE5\\u5177\\u53EF\\u4EE5\\u81EA\\u52A8\\u5224\\u65AD\\u540E\\u7F00\\uFF0C\\u6240\\u4EE5\\u53EF\\u4EE5\\u7B80\\u5199\\u6210\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ tar -xf filename.tar.gz\\n\")), mdx(\"h2\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \" .7z\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ 7z x filename.7z\\n\")), mdx(\"h2\", null, \"\\u89E3\\u538B\", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \" .rar\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\\uFF1A\"), mdx(\"p\", null, \"\\u53EF\\u4EE5\\u901A\\u8FC7\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"7z\"), \"\\u6216\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unrar\"), \"\\u89E3\\u538B\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ 7z x filename.rar         # Using 7zip\\n$ unrar x filename.rar      # Using Unrar\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"7z\\u7684\\u89E3\\u538B\\u53EF\\u4EE5\\u547D\\u4EE4\\u53EF\\u4EE5\\u901A\\u7528\\u4EE5\\u4E0A\\u6240\\u6709\\u538B\\u7F29\\u683C\\u5F0F\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"不同的文件需要不同的解压命令，就一起来看看不同格式的解压命令吧。 解压 .zip  格式文件： 解压  .gz 格式文件： 解压  .tar  格式文件： 解压  .tar.gz 格式文件： 解压  .tar.xz 格式文件： 解压  .tar.bz…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/linux-command-line-decompression-archives-in-different-formats.html","formatString":"YYYY/MM/DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}