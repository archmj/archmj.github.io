{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/java-application-migration-to-docker-deployment-scheme.html","result":{"data":{"post":{"__typename":"MdxPost","slug":"/java-application-migration-to-docker-deployment-scheme.html","title":"Java应用迁移到Docker的部署方案","date":"2020/03/24","tags":[{"name":"java","slug":"java"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Java应用迁移到Docker的部署方案\",\n  \"date\": \"2020-03-24 21:40\",\n  \"slug\": \"/java-application-migration-to-docker-deployment-scheme.html\",\n  \"tags\": [\"java\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"  \\u8FD1\\u4E9B\\u5E74\\u5BB9\\u5668\\u6280\\u672F\\u975E\\u5E38\\u6D41\\u884C\\uFF0C\\u53EF\\u4EE5\\u89E3\\u51B3\\u73AF\\u5883\\u4E0A\\u7684\\u95EE\\u9898\\u3002\\u8BA9\\u4E0D\\u540C\\u7684\\u5E94\\u7528\\u4E4B\\u95F4\\u73AF\\u5883\\u9694\\u79BB\\uFF0C\\u4E0D\\u4F1A\\u51B2\\u7A81\\u3002\\u5728\\u56E2\\u961F\\u5F00\\u53D1\\u4E2D\\uFF0C\\u4F7F\\u7528\\u5BB9\\u5668\\u6280\\u672F\\u53EF\\u4EE5\\u7EDF\\u4E00\\u56E2\\u961F\\u6210\\u5458\\u4E4B\\u95F4\\u7684\\u73AF\\u5883\\u95EE\\u9898\\uFF0C\\u4E0D\\u7528\\u62C5\\u5FC3\\u6211\\u672C\\u5730\\u53EF\\u4EE5\\uFF0C\\u6D4B\\u8BD5\\u548C\\u751F\\u4EA7\\u4E0D\\u884C\\u7684\\u95EE\\u9898\\u4E86\\u3002\"), mdx(\"p\", null, \"\\u5BB9\\u5668\\u6280\\u672F\\u76EE\\u524D\\u4E3B\\u6D41\\u7684\\u662F\\u4EE5\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u4E3A\\u4EE3\\u8868\\uFF0C\\u8FD9\\u91CC\\u5C31\\u4ECB\\u7ECD\\u4E0B\\u5C06\\u539F\\u6709\\u7684\\u8001\\u9879\\u76EE\\u8FC1\\u79FB\\u5230\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u7684\\u65B9\\u6848\\u3002\\u5F53\\u7136\\u6700\\u7B80\\u5355\\u7684\\u5C31\\u662F\\u76F4\\u63A5\\u8FC1\\u79FB\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u4E0D\\u8003\\u8651\\u7BA1\\u7406\\u548C\\u7F16\\u6392\\u3002\"), mdx(\"h2\", null, \"docker\\u5B89\\u88C5\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u9488\\u5BF9\\u4E0D\\u540C\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GNU/Linux\"), \"\\u53D1\\u578B\\u7248\\u6709\\u4E0D\\u540C\\u7684\\u5B89\\u88C5\\u65B9\\u6CD5\\uFF0C\\u4E0B\\u9762\\u4EE5\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"REHL/CentOS\"), \"\\u4E3A\\u793A\\u4F8B\\u5B89\\u88C5\\uFF1A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\uFF1A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Docker\"), \"\\u5BF9\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Linux\"), \"\\u5185\\u6838\\u7248\\u672C\\u7684\\u6700\\u4F4E\\u8981\\u6C42\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3.10\"), \"\\uFF08\\u8BF7\\u5148\\u67E5\\u770B\\u5185\\u6838\\u7248\\u672C,\\u547D\\u4EE4\\uFF1A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"uname -r\"), \"\\n\\u6CE8\\u610F\\u4EE5\\u4E0B\\u90E8\\u5206\\u547D\\u4EE4\\u9700\\u8981\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo\"), \"\\u6743\\u9650\\uFF08\\u53D6\\u51B3\\u4F60\\u662F\\u666E\\u901A\\u7528\\u6237\\uFF09\\uFF0C\\u5982\\u679C\\u662Froot\\u7528\\u6237\\u65E0\\u9700\\u6DFB\\u52A0sudo.\")), mdx(\"p\", null, \"\\u68C0\\u67E5docker\\u662F\\u5426\\u5DF2\\u7ECF\\u5B89\\u88C5\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo docker -v\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5982\\u679C\\u6709\\u8F93\\u51FAdocker\\u7248\\u672C\\u4FE1\\u606F\\uFF0C\\u5219\\u53EF\\u4EE5\\u8DF3\\u8FC7\\u5B89\\u88C5\\u6B65\\u9AA4\")), mdx(\"p\", null, \"\\u5B89\\u88C5\\u4F9D\\u8D56\\u5305\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo yum install -y yum-utils \\\\\\n  device-mapper-persistent-data \\\\\\n  lvm2\\n\")), mdx(\"p\", null, \"\\u6DFB\\u52A0docker\\u7A33\\u5B9A\\u7248\\u672C\\u6E90\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo yum-config-manager \\\\\\n    --add-repo \\\\\\n    https://download.docker.com/linux/centos/docker-ce.repo\\n\")), mdx(\"p\", null, \"\\u5B89\\u88C5docker\\u6700\\u65B0\\u7248\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo yum install docker-ce -y\\n\")), mdx(\"p\", null, \"\\u542F\\u52A8docker\\u670D\\u52A1\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo systemctl start docker\\n\")), mdx(\"p\", null, \"\\u9A8C\\u8BC1docker\\u662F\\u5426\\u53EF\\u7528\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo docker run hello-world\\n\")), mdx(\"p\", null, \"\\u6709\\u5982\\u4E0B\\u4FE1\\u606F\\u5219\\u8BF4\\u660Edocker\\u5DF2\\u7ECF\\u5B89\\u88C5\\u6210\\u529F\\u5E76\\u4E14\\u670D\\u52A1\\u6B63\\u5E38\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"Unable to find image 'hello-world:latest' locally\\nlatest: Pulling from library/hello-world\\n1b930d010525: Pull complete\\nDigest: sha256:d1668a9a1f5b42ed3f46b70b9cb7c88fd8bdc8a2d73509bb0041cf436018fbf5\\nStatus: Downloaded newer image for hello-world:latest\\n\\nHello from Docker!\\nThis message shows that your installation appears to be working correctly.\\n\\nTo generate this message, Docker took the following steps:\\n 1. The Docker client contacted the Docker daemon.\\n 2. The Docker daemon pulled the \\\"hello-world\\\" image from the Docker Hub.\\n    (amd64)\\n 3. The Docker daemon created a new container from that image which runs the\\n    executable that produces the output you are currently reading.\\n 4. The Docker daemon streamed that output to the Docker client, which sent it\\n    to your terminal.\\n\\nTo try something more ambitious, you can run an Ubuntu container with:\\n $ docker run -it ubuntu bash\\n\\nShare images, automate workflows, and more with a free Docker ID:\\n https://hub.docker.com/\\n\\nFor more examples and ideas, visit:\\n https://docs.docker.com/get-started/\\n\")), mdx(\"p\", null, \"docker\\u547D\\u4EE4\\u6BCF\\u6B21\\u52A0sudo\\u5F88\\u70E6\\uFF0C\\u4E0D\\u52A0\\u6743\\u9650\\u4E0D\\u591F.\\n\\u5C06\\u7528\\u6237\\u52A0\\u5165docker\\u7528\\u6237\\u7EC4\\uFF08docker\\u4F1A\\u81EA\\u52A8\\u521B\\u5EFAdocker\\u7EC4)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo usermod -aG docker $USER\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u91CD\\u65B0\\u767B\\u5165ssh\\u6216\\u8005\\u65B0\\u5EFA\\u7EC8\\u7AEF\\u751F\\u6548\")), mdx(\"h2\", null, \"\\u5E38\\u7528docker\\u547D\\u4EE4\"), mdx(\"p\", null, \"\\u63D0\\u4F9B\\u4EE5\\u4E0B\\u5E38\\u7528docker\\u547D\\u4EE4\\u65B9\\u4FBF\\u7EF4\\u62A4\\u5BB9\\u5668\\u3002\"), mdx(\"p\", null, \"\\u67E5\\u770B\\u6B63\\u5728\\u8FD0\\u884C\\u7684\\u5BB9\\u5668\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker ps\\n\")), mdx(\"p\", null, \"\\u67E5\\u770B\\u5DF2\\u7ECF\\u505C\\u6B62\\u7684\\u5BB9\\u5668\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker ps -ak\\n\")), mdx(\"p\", null, \"\\u505C\\u6B62\\u6B63\\u5728\\u8FD0\\u884C\\u7684\\u5BB9\\u5668\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker stop \\u5BB9\\u5668\\u540D\\u79F0\\n\")), mdx(\"p\", null, \"\\u542F\\u52A8\\u5DF2\\u7ECF\\u505C\\u6B62\\u7684\\u5BB9\\u5668\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker start \\u5BB9\\u5668\\u540D\\u79F0\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\uFF0C\\u4E0D\\u4E00\\u5B9A\\u53EF\\u4EE5\\u542F\\u52A8\\u6210\\u529F\\u3002\\u5982\\u679C\\u542F\\u52A8\\u5931\\u8D25\\uFF0C\\u8BF7\\u68C0\\u67E5\\u65E5\\u5FD7\\u5E76\\u5206\\u6790\\u539F\\u56E0\\u3002\")), mdx(\"p\", null, \"\\u67E5\\u770B\\u5BB9\\u5668\\u65E5\\u5FD7\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker logs -f \\u5BB9\\u5668\\u540D\\u79F0\\n\")), mdx(\"h2\", null, \"\\u5355\\u673A\\u90E8\\u7F72\\u8FC1\\u79FB\"), mdx(\"p\", null, \"\\u6B64\\u65B9\\u6848\\u9002\\u5408\\u5355\\u670D\\u52A1\\u5668\\u9879\\u76EE\\uFF0C\\u5982\\u679C\\u662F\\u591A\\u670D\\u52A1\\u5668\\u5BB9\\u5668\\u96C6\\u7FA4\\u3002\\u9700\\u8981\\u7528\\u5230\\u5BB9\\u5668\\u7F16\\u6392\\u670D\\u52A1,\\u5982\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose\"), \"\\u6216\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker swarm\"), \"\\u6216\\u8005\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k8s\"), \"\\u3002\\n\\u7531\\u4E8E\\u516C\\u53F8\\u9879\\u76EE\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tomcat\"), \"\\u670D\\u52A1\\u4E00\\u822C\\u4E0D\\u66B4\\u9732\\u5916\\u7F51\\u8BBF\\u95EE\\uFF0C\\u524D\\u9762\\u6709\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nginx\"), \"\\u53CD\\u5411\\u4EE3\\u7406\\u3002\\u6240\\u4EE5\\u53EF\\u4EE5\\u91C7\\u7528\\u5355\\u673A\\u90E8\\u7F72\\u65B9\\u6848\\u3002\\n\\u5982\\u679C\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nginx\"), \"\\u96C6\\u7FA4\\u5219\\u4E0D\\u80FD\\u4F7F\\u7528\\u5355\\u673A\\u90E8\\u7F72\\u65B9\\u6848\\uFF0C\\u5B58\\u5728\\u8DE8\\u670D\\u52A1\\u5668\\u5BB9\\u5668\\u4E4B\\u95F4\\u65E0\\u6CD5\\u901A\\u4FE1\\u95EE\\u9898\\uFF0C\\u9700\\u8981\\u91C7\\u7528\\u5BB9\\u5668\\u7F16\\u6392\\u5DE5\\u5177\\u8FDB\\u884C\\u7F16\\u6392\\u3002\"), mdx(\"p\", null, \"\\u8FC1\\u79FB\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tomcat\"), \"\\u670D\\u52A1\\u5230\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u5BB9\\u5668\\u8FDB\\u884C\\u6D4B\\u8BD5\\uFF1A\\n\\u9700\\u8981\\u590D\\u5236\\u7684\\u5185\\u5BB9(\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"conf\"), \"\\u4E0B\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"context.xml\"), \",\\u548C\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"server.xml\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bin\"), \"\\u4E0B\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"catalina.sh\"), \"(JVM\\u53C2\\u6570\\u914D\\u7F6E\\uFF09\")), mdx(\"p\", null, \"\\u867D\\u7136\\u5355\\u673A\\u90E8\\u7F72\\u53EF\\u4EE5\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker run --name tomcat\"), \"\\u8FD9\\u79CD\\u65B9\\u5F0F\\uFF0C\\u4F46\\u662F\\u8FD9\\u79CD\\u65B9\\u5F0F\\u4E0D\\u5229\\u4E8E\\u7EF4\\u62A4\\u548C\\u540E\\u671F\\u6269\\u5C55\\u3002\\n\\u6240\\u4EE5\\u5EFA\\u8BAE\\u5C06\\u914D\\u7F6E\\u5199\\u5230\\u914D\\u7F6E\\u6587\\u4EF6\\u4E2D\\u3002\"), mdx(\"h3\", null, \"\\u5B89\\u88C5docker-compose\"), mdx(\"p\", null, \"\\u672C\\u5730\\u6216\\u8005\\u6D4B\\u8BD5\\u73AF\\u5883\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose\"), \"\\u505A\\u4E3A\\u5BB9\\u5668\\u7F16\\u6392\\u5DE5\\u5177\\u3002\\n\\u751F\\u4EA7\\u73AF\\u5883\\u8BF7\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-swarm\"), \"\\u6216\\u8005\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k8s\"), \"\\u3002\"), mdx(\"p\", null, \"\\u4E0B\\u8F7D\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose\"), \"\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo curl -L \\\"https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)\\\" -o /usr/local/bin/docker-compose\\n\")), mdx(\"p\", null, \"\\u8BBE\\u7F6E\\u53EF\\u6267\\u884C\\u6743\\u9650\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ sudo chmod +x /usr/local/bin/docker-compose\\n\")), mdx(\"p\", null, \"\\u521B\\u5EFA\\u5FEB\\u6377\\u65B9\\u5F0F:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\\n\")), mdx(\"p\", null, \"\\u68C0\\u67E5\\u662F\\u5426\\u5B89\\u88C5\\u6210\\u529F\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker-compose --version\\n\")), mdx(\"p\", null, \"\\u5982\\u679C\\u6709\\u8F93\\u51FAdocker-compose\\u7248\\u672C\\u4FE1\\u606F\\u5219\\u5B89\\u88C5\\u6210\\u529F\\u3002\"), mdx(\"h4\", null, \"\\u7F16\\u5199\\u914D\\u7F6E\\u53CA\\u542F\\u52A8\"), mdx(\"p\", null, \"\\u7F16\\u5199hhr\\u7684\\u914D\\u7F6E\\u6587\\u4EF6\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yml\"\n  }), \"ersion: '3'\\nservices:\\n  tomcat:\\n    # \\u4E3B\\u673A\\u540D\\u79F0\\n    hostname: hhr-tomcat\\n    # \\u5BB9\\u5668\\u540D\\u79F0\\n    container_name: hhr-tomcat\\n    # \\u6307\\u5B9A\\u955C\\u50CF\\u7248\\u672C\\n    image: tomcat:8.5.50\\n    # \\u6620\\u5C04\\u7AEF\\u53E3\\n    ports:\\n      - 9093:8080\\n\\n    volumes:\\n        # \\u6620\\u5C04war\\u5305\\u76EE\\u5F55\\n      - /app/docker/hhr/tomcat/webapps/:/usr/local/tomcat/webapps/\\n        # \\u6620\\u5C04context.xml\\n      - /app/docker/hhr/tomcat/conf/context.xml:/usr/local/tomcat/conf/context.xml\\n        # \\u6620\\u5C04server.xml\\n      - /app/docker/hhr/tomcat/conf/server.xml:/usr/local/tomcat/conf/server.xml\\n        # \\u6620\\u5C04logs\\u76EE\\u5F55\\n      - /app/docker/hhr/tomcat/logs/:/usr/local/tomcat/logs/\\n        #\\u6620\\u5C04catalina.sh\\n      - /app/docker/hhr/tomcat/bin/catalina.sh:/usr/local/tomcat/bin/catalina.sh\\n        # \\u6620\\u5C04config\\u76EE\\u5F55\\n      - /app/docker/hhr/tomcat/bin/config:/usr/local/tomcat/config\\n    restart: always\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\u4EE5\\u4E0A\\u6620\\u5C04\\u6587\\u4EF6\\u91CC\\u9762\\u7684\\u5185\\u5BB9\\uFF0C\\u91CC\\u9762\\u7684\\u5730\\u5740\\u4E00\\u5B9A\\u8981\\u4FEE\\u6539\\u6210\\u5BB9\\u5668\\u91CC\\u9762\\u7684\\u8DEF\\u5F84\\u800C\\u4E0D\\u662F\\u672C\\u673A\\u7684\\u8DEF\\u5F84\\uFF0Cdocker\\u91CC\\u9762\\u7684tomcat\\u8BFB\\u53D6\\u7684\\u8DEF\\u5F84\\u662Fdocker\\u91CC\\u9762\\u7684\\nvolumes\\u5192\\u53F7\\u5206\\u9694\\u7684\\u524D\\u9762\\u90E8\\u5206\\u5C31\\u662F\\u672C\\u5730\\u6620\\u5C04\\u76EE\\u5F55\\uFF0C\\u5192\\u53F7\\u540E\\u9762\\u7684\\u5BF9\\u5E94\\u5BB9\\u5668\\u91CC\\u9762\\u7684\\u76EE\\u5F55\\u5730\\u5740\\nports\\u4E3A\\u672C\\u5730\\u548C\\u5BB9\\u5668\\u4E4B\\u95F4\\u7684\\u7AEF\\u53E3\\u6620\\u5C04\\uFF0C\\u6CE8\\u610F\\u5BB9\\u5668\\u540E\\u9762\\u76848080\\u5E94\\u8BE5\\u5BF9\\u5E94tomcat\\u914D\\u7F6E\\u6587\\u4EF6\\u4E2D\\u7684\\u542F\\u52A8\\u7AEF\\u53E3\")), mdx(\"p\", null, \"\\u5728\\u542F\\u52A8docker-compose\\u4E4B\\u524D\\uFF0C\\u5C06\\u672C\\u5730\\u6620\\u5C04\\u76EE\\u5F55\\u7684\\u76EE\\u5F55\\u548C\\u6587\\u4EF6\\u521B\\u5EFA\\u597D\\uFF08\\u5982\\u679C\\u5148\\u542F\\u52A8\\u5BB9\\u5668\\u5219\\u4F1A\\u81EA\\u52A8\\u521B\\u5EFA\\u5BF9\\u5E94\\u7684\\u76EE\\u5F55\\uFF09\"), mdx(\"p\", null, \"\\u521B\\u5EFA\\u6620\\u5C04\\u76EE\\u5F55\\u540E\\uFF0C\\u5F00\\u59CB\\u542F\\u52A8\\u3002\\n\\u8FDB\\u5165\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose.yml\"), \"\\u7684\\u6587\\u4EF6\\u76EE\\u5F55\\uFF0C\\u5728\\u7EC8\\u7AEF\\u8F93\\u5165\\u4EE5\\u4E0B\\u547D\\u4EE4\\u542F\\u52A8\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker-compose up\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\uFF0C\\u8FD9\\u662F\\u4EE5\\u63A7\\u5236\\u53F0\\u65B9\\u5F0F\\u542F\\u52A8\\u65B9\\u4FBF\\u770B\\u65E5\\u5FD7\\u3002\\u6309ctrl-c\\u4F1A\\u4E2D\\u65AD\\u505C\\u6B62\\u670D\\u52A1\\u3002\")), mdx(\"p\", null, \"\\u5982\\u679C\\u60F3\\u4EE5\\u540E\\u53F0\\u542F\\u52A8\\u670D\\u52A1\\u5219\\u4F7F\\u7528\\u547D\\u4EE4\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ docker-compose up -d\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5F3A\\u70C8\\u63A8\\u8350\\u8FD9\\u79CD\\uFF0Cdocker-compose up\\u4E2D\\u65AD\\u540E\\u4F1A\\u81EA\\u52A8\\u5220\\u9664\\u5BB9\\u5668\\u7684\")), mdx(\"p\", null, \"\\u5148\\u540E\\u53F0\\u542F\\u52A8\\u7136\\u540E\\u518D\\u67E5\\u770B\\u65E5\\u5FD7,\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"\\n$ docker logs -f \\u5BB9\\u5668\\u540D\\u79F0\\n\")), mdx(\"p\", null, \"\\u67E5\\u770B\\u65E5\\u5FD7\\u4FE1\\u606F\\u6CA1\\u95EE\\u9898\\u540E\\uFF0C\\u5C31\\u53EF\\u4EE5\\u901A\\u8FC7\\u5730\\u5740\\u8BBF\\u95EE\\u4E86\\uFF0C\\u6CE8\\u610F\\u8BBF\\u95EE\\u7684\\u65F6\\u5019\\u8981\\u901A\\u8FC7\\u6620\\u5C04\\u7684\\u7AEF\\u53E3\\u8BBF\\u95EE\\u3002\\u4E0A\\u9762\\u6620\\u5C04\\u7684\\u662F9093\\uFF0C\\u6240\\u4EE5\\u8BBF\\u95EE\\u7684\\u5730\\u5740\\u4E5F\\u662F9093\\u3002\"), mdx(\"p\", null, \"\\u6210\\u529F\\u90E8\\u7F72\\u4E00\\u53F0\\u5230\\u670D\\u52A1\\u5668\\u540E\\uFF0C\\u5C31\\u53EF\\u4EE5\\u628A\\u5176\\u4F59\\u670D\\u52A1\\u5668\\u4E5F\\u90E8\\u7F72\\u4E86\\uFF0C\\u65B9\\u6CD5\\u6709\\u597D\\u51E0\\u79CD:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5C06\\u5F53\\u524D\\u5BB9\\u5668\\u6253\\u5305\\u6210\\u955C\\u50CF\\uFF0C\\u4E0A\\u4F20\\u5230\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u7684\\u4ED3\\u5E93\\uFF0C\\u7136\\u540E\\u5176\\u4ED6\\u670D\\u52A1\\u5668\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker pull\"), \"\\u518D\\u8FD0\\u884C\\u5C31\\u53EF\\u4EE5 \\u4E86\\u3002\\u7531\\u4E8E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dockerhub\"), \"\\u514D\\u8D39\\u8D26\\u53F7\\u4ED3\\u5E93\\u53EA\\u80FD\\u662F\\u516C\\u5F00\\u7684\\uFF0C\\u6240\\u4EE5\\u9664\\u975E\\u81EA\\u5DF1\\u642D\\u5EFA\\u79C1\\u670D\\u3002\\u4E0D\\u7136\\u4E0D\\u5EFA\\u8BAE\\u8FD9\\u79CD\\u65B9\\u5F0F\\u3002\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5C06\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose.yml\"), \"\\u590D\\u5236\\u5230\\u5176\\u4ED6\\u670D\\u52A1\\u5668\\uFF0C\\u7136\\u540E\\u76F4\\u63A5\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker-compose up -d\"), \"\\u540C\\u6837\\u7684\\u4E5F\\u542F\\u52A8\\u6210\\u529F\\u4E86\\u3002\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u63A8\\u8350\\uFF0C\\u6620\\u5C04\\u76EE\\u5F55\\u4E5F\\u8981\\u540C\\u4E0A\\u5148\\u521B\\u5EFA\\u597D\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5C06\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u5BB9\\u5668\\u6253\\u5305\\u6210\\u538B\\u7F29\\u5305\\uFF0C\\u590D\\u5236\\u5230\\u5176\\u4ED6\\u670D\\u52A1\\u5668\\uFF0C\\u4F7F\\u7528\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker\"), \"\\u547D\\u4EE4\\u89E3\\u538B\\u8FD0\\u884C\\u5373\\u53EF\\u3002\"))), mdx(\"p\", null, \"(\\u5B8C\\uFF09\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"  近些年容器技术非常流行，可以解决环境上的问题。让不同的应用之间环境隔离，不会冲突。在团队开发中，使用容器技术可以统一团队成员之间的环境问题，不用担心我本地可以，测试和生产不行的问题了。 容器技术目前主流的是以 docker…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/java-application-migration-to-docker-deployment-scheme.html","formatString":"YYYY/MM/DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}