{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/clean-up-docker-disk-space.html","result":{"data":{"post":{"__typename":"MdxPost","slug":"/clean-up-docker-disk-space.html","title":"清理docker磁盘空间","date":"2020/04/29","tags":[{"name":"docker","slug":"docker"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"清理docker磁盘空间\",\n  \"date\": \"2020-04-29 22:46\",\n  \"slug\": \"/clean-up-docker-disk-space.html\",\n  \"tags\": [\"docker\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"docker\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"image\"), \"\\u548C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"container\"), \"\\u4F1A\\u5360\\u7528\\u5927\\u91CF\\u7684\\u78C1\\u76D8\\u7A7A\\u95F4\\uFF0C\\u6240\\u4EE5\\u5E94\\u8BE5\\u5B9A\\u671F\\u6E05\\u7406\\u65E0\\u7528docker\\u78C1\\u76D8\\u7A7A\\u95F4\\u3002docker\\u63D0\\u4F9B\\u4E86\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker system\"), \"\\u547D\\u4EE4\\u53CA\\u624B\\u52A8\\u6E05\\u7406\\u7684\\u65B9\\u5F0F\\u6E05\\u7406\\u7A7A\\u95F4\\u3002\"), mdx(\"p\", null, \"###\\u3000docker system\\u547D\\u4EE4\"), mdx(\"p\", null, \"\\u6E05\\u7406\\u78C1\\u76D8\\uFF0C\\u5220\\u9664\\u5173\\u95ED\\u7684\\u5BB9\\u5668\\u3001\\u65E0\\u7528\\u7684\\u6570\\u636E\\u5377\\u548C\\u7F51\\u7EDC\\uFF0C\\u4EE5\\u53CAdangling\\u955C\\u50CF\\uFF08\\u5373\\u65E0tag\\u7684\\u955C\\u50CF),\\u4F7F\\u7528\\u547D\\u4EE4\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker system prune\\n\\nWARNING! This will remove:\\n  - all stopped containers\\n  - all networks not used by at least one container\\n  - all dangling images\\n  - all dangling build cache\\n\\nAre you sure you want to continue? [y/N]\\n\")), mdx(\"p\", null, \"\\u6216\\u8005\\u6E05\\u7406\\u5F97\\u66F4\\u52A0\\u5F7B\\u5E95\\uFF0C\\u53EF\\u4EE5\\u5C06\\u6CA1\\u6709\\u5BB9\\u5668\\u4F7F\\u7528Docker\\u955C\\u50CF\\u90FD\\u5220\\u6389:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker system prune -a\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F:\\u8FD9\\u4E24\\u4E2A\\u547D\\u4EE4\\u4F1A\\u628A\\u4F60\\u6682\\u65F6\\u5173\\u95ED\\u7684\\u5BB9\\u5668\\uFF0C\\u4EE5\\u53CA\\u6682\\u65F6\\u6CA1\\u6709\\u7528\\u5230\\u7684Docker\\u955C\\u50CF\\u90FD\\u5220\\u6389\")), mdx(\"h3\", null, \"\\u624B\\u52A8\\u6E05\\u7406\"), mdx(\"p\", null, \"\\u5728\\u6CA1\\u6709\\u2018docker system\\u2018\\u547D\\u4EE4\\u65F6\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528\\u624B\\u52A8\\u64CD\\u4F5C\\u8FDB\\u884C\\u6E05\\u7406\\u3002\"), mdx(\"p\", null, \"\\u5220\\u9664\\u6240\\u6709\\u5173\\u95ED\\u7684\\u5BB9\\u5668\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm\\n\")), mdx(\"p\", null, \"\\u5220\\u9664\\u6240\\u6709dangling\\u955C\\u50CF\\uFF08\\u5373\\u65E0tag\\u7684\\u955C\\u50CF\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker rmi $(docker images | grep \\\"^<none>\\\" | awk \\\"{print $3}\\\")\\n\")), mdx(\"p\", null, \"\\u5220\\u9664\\u6240\\u6709dangling\\u6570\\u636E\\u5377\\uFF08\\u5373\\u65E0\\u7528\\u7684Volume\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker volume rm $(docker volume ls -qf dangling=true)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"docker的 image 和 container 会占用大量的磁盘空间，所以应该定期清理无用docker磁盘空间。docker提供了 docker system 命令及手动清理的方式清理空间。 ###　docker system…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/clean-up-docker-disk-space.html","formatString":"YYYY/MM/DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}